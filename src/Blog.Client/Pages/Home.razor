@page "/"
@inject HttpClient Http
@using Blog.Client.Models

<PageTitle>Home</PageTitle>

@if (!IsLoading)
{
    @if (bannerBlog != null)
    {
        <div class="container">
            <div class="p-4 p-md-5 mb-4 text-dark bg-white">
                <div class="col-md-6 px-0">
                    <h1 class="display-4 fst-italic" style="color: #f48840;"><b>@bannerBlog?.title</b></h1>
                    <p class="lead my-3">@string.Join(" ", bannerBlog?.content!.Split(' ').Take(15)!)...</p>
                    <p class="lead mb-0"><a href="@($"/post/{bannerBlog?.id}")" class="text-dark fw-bold">Continue reading...</a></p>
                </div>
            </div>
        </div>
    }
}

<section class="blog-posts">
    <div class="container">
        <div class="row">
            <div class="col-lg-8">
                @if (IsLoading)
                {
                    <p>Loading...</p>
                }
                else
                {
                    @if (blogs != null && blogs.Any())
                    {

                        <div class="all-blog-posts">
                            <div class="row">
                                @foreach (var blog in blogs)
                                {
                                    <div class="col-lg-12">
                                        <div class="blog-post">
                                            <div class="blog-thumb">
                                                <img src="@blog?.imageUrl" alt="">
                                            </div>
                                            <div class="down-content">
                                                <a href="@($"/post/{blog?.id}")">
                                                    <h4>@blog?.title</h4>
                                                </a>
                                                <ul class="post-info">
                                                    <li><a href="#">@blog?.author</a></li>
                                                    <li><a href="#">@blog?.createdAt.ToString("MMMM dd, yyyy")</a></li>
                                                    <li><a href="#">@blog?.views Views</a></li>
                                                </ul>
                                                <p>@blog?.content</p>
                                                <div class="post-options">
                                                    <div class="row">
                                                        <div class="col-6">
                                                            <ul class="post-tags">
                                                                <li><i class="fa fa-tags"></i></li>
                                                                <li><a href="#">Beauty</a>,</li>
                                                                <li><a href="#">Nature</a></li>
                                                            </ul>
                                                        </div>
                                                        <div class="col-6">
                                                            <ul class="post-share">
                                                                <li><i class="fa fa-share-alt"></i></li>
                                                                <li><a href="#">Facebook</a>,</li>
                                                                <li><a href="#"> Twitter</a></li>
                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                <div class="col-lg-12">
                                    <div class="main-button">
                                        <a href="/blogs">View All Posts</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
            <div class="col-lg-4">
                <div class="sidebar">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="sidebar-item recent-posts">
                                <div class="sidebar-heading">
                                    <h2>Recent Posts</h2>
                                </div>
                                <div class="content">
                                    <ul>
                                        @if (recentPosts != null && recentPosts.Any())
                                        {
                                            @foreach (var post in recentPosts)
                                            {
                                                <li>
                                                    <a href="post-details.html">
                                                        <h5>@post?.title</h5>
                                                        <span>@post?.createdAt.ToString("MMMM dd, yyyy")</span>
                                                    </a>
                                                </li>
                                            }
                                        }
                                        else
                                        {
                                            <li>No recent posts available.</li>
                                        }
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    private List<Blog?>? blogs = new List<Blog?>();
    private List<Blog?>? recentPosts = new List<Blog?>();
    private Blog? bannerBlog = new Blog();
    Random random = new Random();
    private int totalPages = 1;
    private int pageNumber = 1;
    private bool IsLoading = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadBlogs();
    }

    private async Task LoadBlogs()
    {
        IsLoading = true;

        var response = await Http.GetAsync($"https://localhost:7145/api/posts?pageNumber={pageNumber}&pageSize=6");

        if (response.IsSuccessStatusCode)
        {
            var responseData = await response.Content.ReadFromJsonAsync<ListPostResponse>();
            if (responseData != null)
            {
                blogs = responseData?.Posts!;
                if (blogs != null && blogs.Any())
                {
                    var sortedBlogs = blogs.OrderByDescending(b => b?.createdAt).ToList();
                    bannerBlog = blogs.OrderBy(x => random.Next()).First();
                    recentPosts = sortedBlogs.Take(3).ToList();

                    // Calculate total pages
                    totalPages = (int)Math.Ceiling((double)responseData?.TotalCount! / 6); // Assuming 6 items per page
                }
            }
        }

        IsLoading = false;
    }

    private async Task HandleSearch()
    {
        IsLoading = true;
        pageNumber = 1; // Reset page number when searching
        var response = await Http.GetAsync($"https://localhost:7145/api/posts?pageNumber={pageNumber}&pageSize=6");

        if (response.IsSuccessStatusCode)
        {
            var responseData = await response.Content.ReadFromJsonAsync<ListPostResponse>();
            if (responseData != null)
            {
                blogs = responseData?.Posts!;
            }
        }
        IsLoading = false;
    }

    private class ListPostResponse
    {
        public List<Blog>? Posts { get; set; }
        public int? TotalCount { get; set; }
    }
}