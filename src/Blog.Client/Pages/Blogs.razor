@inject HttpClient Http
@page "/blogs";

<div class="heading-page header-text">
    <section class="page-heading">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="text-content">
                        <h4>Recent Posts</h4>
                        <h2>Our Recent Blog Entries</h2>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

<section class="blog-posts grid-system">
    <div class="container">
        <div class="row">
            <div class="col-lg-8">
                <div class="all-blog-posts">
                    <div class="row">
                        @if (blogs != null && blogs.Any())
                        {
                            @foreach (var blog in blogs)
                            {
                                <div class="col-lg-6">
                                    <div class="blog-post">
                                        <div class="blog-thumb">
                                            <img src="images/blog-thumb-01.jpg" alt="">
                                        </div>
                                        <div class="down-content">
                                            <span>Lifestyle</span>
                                            <a href="post-details.html"><h4>@blog?.Title</h4></a>
                                            <ul class="post-info">
                                                <li><a href="#">@blog?.author</a></li>
                                                <li><a href="#">@blog?.createdAt.ToString("MMMM dd, yyyy")</a></li>
                                                <li><a href="#">@blog?.views views</a></li>
                                            </ul>
                                            <p>@blog.content</p>
                                            <div class="post-options">
                                                <div class="row">
                                                    <div class="col-lg-12">
                                                        <ul class="post-tags">
                                                            <li><i class="fa fa-tags"></i></li>
                                                            <li><a href="#">Best Templates</a>,</li>
                                                            <li><a href="#">TemplateMo</a></li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <p>No blogs available.</p>
                        }
                        <div class="col-lg-12">
                            <ul class="page-numbers">
                                <li><a href="#">1</a></li>
                                <li class="active"><a href="#">2</a></li>
                                <li><a href="#">3</a></li>
                                <li><a href="#"><i class="fa fa-angle-double-right"></i></a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="sidebar">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="sidebar-item search">
                                <form id="search_form" name="gs" method="GET" action="#">
                                    <input type="text" name="q" class="searchText" placeholder="type to search..." autocomplete="on">
                                </form>
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="sidebar-item recent-posts">
                                <div class="sidebar-heading">
                                    <h2>Recent Posts</h2>
                                </div>

                                <div class="content">
                                    <ul>
                                        @if (recentPosts != null && recentPosts.Any())
                                        {
                                            @foreach (var post in recentPosts)
                                            {
                                                <li>
                                                    <a href="post-details.html">
                                                        <h5>@post?.Title</h5>
                                                        <span>@post?.createdAt.ToString("MMMM dd, yyyy")</span>
                                                    </a>
                                                </li>
                                            }
                                        }
                                        else
                                        {
                                            <li>No recent posts available.</li>
                                        }
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    private List<Blog?>? blogs = new List<Blog?>();
    private List<Blog?>? recentPosts = new List<Blog?>();

    protected override async Task OnInitializedAsync()
    {
        var response = await Http.GetAsync("https://localhost:7145/api/posts");

        if (response.IsSuccessStatusCode)
        {
            blogs = await response.Content.ReadFromJsonAsync<List<Blog?>?>();
            if (blogs != null && blogs.Any())
            {
                var sortedBlogs = blogs.OrderByDescending(b => b?.createdAt).ToList();
                recentPosts = sortedBlogs.Take(3).ToList();
            }
        }

    }

    public class Blog
    {
        public Guid Id { get; set; }
        public string? Title { get; set; }
        public string? imageUrl { get; set; }
        public string? content { get; set; }
        public DateTime createdAt { get; set; }
        public DateTime updatedAt { get; set; }
        public string? author { get; set; }
        public string? tags { get; set; }
        public int views { get; set; }
    }
}